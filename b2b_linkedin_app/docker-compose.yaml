version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: b2b_linkedin_app_web
    env_file:
      - .env
    volumes:
      - .:/app
      - shared_data:/app/shared_volume
      - logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
      - captcha_ready_flags:/captcha_ready_flags
    ports:
      - "8001:8001"
    depends_on:
      - db
      - redis
      - celery
      - beat
      - rabbitmq
      - captcha_watcher
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        daphne -b 0.0.0.0 -p 8001 b2b_linkedin_app.asgi:application
      "
    working_dir: /app
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - app-network
    restart: always

  captcha_watcher:
      build:
        context: .
        dockerfile: captcha_watcher/Dockerfile
      container_name: captcha_watcher
      ports:
        - "5900:5900" # VNC port
        - "6080:6080" # noVNC web port
      image: captcha_watcher_image:latest
      volumes:
        - shared_data:/app/shared_volume
        - ./cookies:/app/cookies
        - /var/run/docker.sock:/var/run/docker.sock
        - captcha_ready_flags:/captcha_ready_flags
        - logs:/app/logs
      environment:
        - DISPLAY=:0
        - PYTHONPATH=/app
        - DEBIAN_FRONTEND=noninteractive
        - LOG_LEVEL=DEBUG
      env_file:
        - .env
      dns:
        - 8.8.8.8
        - 1.1.1.1
      restart: always
      networks:
        - app-network
      deploy:
        resources:
          limits:
            cpus: '0.5'
      # Добавьте эту команду для дополнительной безопасности:
      command: sh -c "
        sed -i 's/\r$//' /app/websockify-wrapper.sh 2>/dev/null || true &&
        /app/captcha_watcher/start.sh"

  celery:
    build:
      context: .
    container_name: b2b_linkedin_app_celery
    command: celery -A b2b_linkedin_app worker --loglevel=info
    volumes:
      - shared_data:/app/shared_volume
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
      - captcha_ready_flags:/captcha_ready_flags
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - rabbitmq
    working_dir: /app
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - app-network
    restart: always

  beat:
    build:
      context: .
    container_name: b2b_linkedin_app_beat
    command: celery -A b2b_linkedin_app beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - rabbitmq
    working_dir: /app
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - app-network
    restart: always

  db:
    image: postgres:15
    container_name: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - app-network
    ports:
      - "5433:5432"

  redis:
    image: redis:7.0.15
    container_name: redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - app-network
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  logs:
  redisdata:
  postgres_data:
  captcha_ready_flags:
  shared_data:

networks:
  app-network:
    driver: bridge